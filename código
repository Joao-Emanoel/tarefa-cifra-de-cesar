programa
{
	inclua biblioteca Tipos --> ti
	inclua biblioteca Texto --> t
	
	const cadeia alfabeto[26] = {"A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"}
	cadeia frase = ""
	inteiro opcao
	
	cadeia a
	funcao inicio()
	{

	inteiro chave

		escreva("o que você deseja fazer? \n \n")
		escreva("1 - descriptografar uma frase \n")
		escreva("2 - criptografar uma frase \n")
		escreva("3 - exibir todas as descriptografias possíveis pra uma frase \n \n")
		leia(opcao)

		limpa()

		escolha(opcao){

				caso 1:

					escreva("me diga qual frase você quer descriptografar: ")
					leia(frase)
					escreva("me diga qual chave eu devo utilizar: ")
					leia(chave)

					escreva("\n")

					escreva("essa é a sua frase descriptografada: \n \n")
					
					descriptografar(frase, chave)

					leia(a)
	
				pare

				caso 2:

					escreva("me diga qual frase você quer criptografar: ")
					leia(frase)
					escreva("me diga qual chave eu devo utilizar: ")
					leia(chave)

					escreva("\n")

					escreva("esta é sua frase criptografada: \n \n")
					
					criptografar(frase, chave)

					leia(a)
	
				pare

				caso 3:

					escreva("me diga qual frase você quer descriptografar: ")
					leia(frase)

					escreva("\n")


					descriptografar_todas(frase)

					leia(a)
	
				pare
				
			
		}


		limpa()
	
		
	
	}

	funcao criptografar(cadeia texto, inteiro chave){

		
		cadeia letra = "Y"
		caracter letra_caracter = ' '
		inteiro posicao
		inteiro numero_letras_frase
		logico esta_no_alfabeto

		
		numero_letras_frase = t.numero_caracteres(texto)

		
		para(inteiro h=0; h < numero_letras_frase; h++){

			esta_no_alfabeto = falso
			
			letra_caracter = t.obter_caracter(texto, h)
			letra = ti.caracter_para_cadeia(letra_caracter)

			para(inteiro i=0; i < 26; i++){

			posicao = i + chave
			posicao = posicao % 26

			se(letra == alfabeto[i]){

				//escreva("a letra ",letra," está na posição ", i, "\n")
				escreva(alfabeto[posicao])
				esta_no_alfabeto = verdadeiro
				pare
	
				
			}


			
		} 

		   se(esta_no_alfabeto == falso){
				
				escreva(letra)	
			
			

		}
		
	}

	
	}










	funcao descriptografar(cadeia texto, inteiro chave){

		


		cadeia letra = "Y"
		caracter letra_caracter = ' '
		inteiro posicao
		inteiro numero_letras_frase
		logico esta_no_alfabeto

		
		numero_letras_frase = t.numero_caracteres(texto)

		
		para(inteiro h=0; h < numero_letras_frase; h++){

			esta_no_alfabeto = falso
			
			letra_caracter = t.obter_caracter(texto, h)
			letra = ti.caracter_para_cadeia(letra_caracter)

			para(inteiro i=0; i < 26; i++){

			posicao = i - chave

			se(letra == alfabeto[i]){

				se(posicao < 0){
					
				posicao = posicao + 26
	
				}

				escreva(alfabeto[posicao])
				esta_no_alfabeto = verdadeiro
				pare
			}


			
		} 

		   se(esta_no_alfabeto == falso){
				
				escreva(letra)	
			
			

		}
		
	}

	
	}


	funcao descriptografar_todas(cadeia frase1){

		escreva("essas são todas as descriptografias possíveis para essa frase: \n \n")

		para(inteiro i=1; i < 26; i++){

			escreva(i, " - ")
			descriptografar(frase1, i)

		 	escreva("\n")


	}
	
	}
	
}

	
